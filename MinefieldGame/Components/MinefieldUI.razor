<h3>Minefield UI</h3>

@if(Minefield != null)
{
    <div class="container minefield">
        @foreach(var row in Minefield.Field)
        {
            <div class="row">
                @foreach (var cell in row)
                {
                    <div class="@($"col border minefield-space-{Minefield.Difficulty.ToString().ToLower()}")">
                        @if(cell.Revealed && cell.HasMine)
                        {
                            @if (cell.HasMine)
                            {
                                <MudIcon Icon="@MineIcon"/>
                            }
                            else if(cell.AdjacentMines > 0)
                            {
                                @cell.AdjacentMines
                            }
                        }
                        else if(!cell.Revealed && cell.Flagged)
                        {
                            <MudIcon Icon="@FlagIcon"/>
                        }
                    </div>
                }
            </div>
        }
    </div>
}

@code {
    private Difficulty DifficultySetting { get; set; }
    private Minefield Minefield { get; set; }

    private readonly string FlagIcon = Icons.Material.Filled.Flag;
    private readonly string MineIcon = Icons.Material.Filled.BrightnessLow;

    protected override void OnInitialized()
    {
        base.OnInitialized();
        Minefield = new Minefield(DifficultySetting);
        Minefield.SetMines();
    }
}
